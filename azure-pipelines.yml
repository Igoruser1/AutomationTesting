parameters:
- name: subscription
  displayName: scopes
  type: string
  default: smoke
  values:
  - smoke
  - ui



trigger:
- master

pool:
   vmImage: 'windows-latest'



schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.9'
    addToPath: true
    architecture: 'x64'

variables:
  group: $(credgroup)
steps:

- task: replacetokens@3
  displayName: 'Replace tokens'
  inputs:
    targetFiles: |
      **/passwords.json
    tokenPrefix: '$('
    tokenSuffix: ')'

- script: |
- task: CmdLine@2
  inputs:
    script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
  displayName: 'Install dependencies'

#- task: CmdLine@2
 # inputs:
  #  script: |
   #   pytest -v -s
  #displayName: 'pytest'
  #continueOnError: true #отвечает за то что-бы код работал дальше вне зависимости от ошибки

- task: CmdLine@2
  inputs:
    ${{ if contains(parameters.subscription, 'smoke') }}:
      script: |
        pytest -v -s -k "smoke"
    ${{ if contains(parameters.subscription, 'ui') }}:
      script: |
        pytest -v -s -k "ui"
    displayName: 'pytest'
    continueOnError: true #отвечает за то что-бы код работал дальше вне зависимости от ошибки

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'result.xml'


